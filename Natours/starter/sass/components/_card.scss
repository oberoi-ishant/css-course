.card {
  // Functionality of card
  perspective: 150rem;
  -moz-perspective: 150rem;
  position: relative;
  /* Since children of .card are position"absolute,
  they are taken out of flow and .card is height:0.
  Much like float. Float solution is clearfix.
  But with absolute, you need to give height to parent.
  So we give same height as given to children. */
  height: 52rem;

  &__side {
    height: 52rem;
    transition: all .8s ease;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    backface-visibility: hidden;
    border-radius: .3rem;
    box-shadow: 0 1.5rem 4rem rgba($color-black, .15);
    /* Image in the child (&__picture) is overflowing, hence border-radius is not
    correctly applied. Therefore overflow: hidden */
    overflow: hidden;

    &--front  {
      background-color: $color-white;
    }

    &--back {
      transform: rotateY(180deg);

      &-1 {
        background-image: linear-gradient(to right bottom,
         $color-secondary-light,
         $color-secondary-dark
        );
      }

      &-2 {
        background-image: linear-gradient(to right bottom,
          $color-tertiary-light,
          $color-tertiary-dark
        );
      }

      &-3 {
        background-image: linear-gradient(to right bottom,
          $color-primary-light,
          $color-primary-dark
        );
      }
    }
  }

  &:hover &__side--front  {
    // in opposite direction to back card.
    transform: rotateY(-180deg);
  }

  &:hover &__side--back  {
    transform: rotateY(0);
  }

  // Front side styling
  &__picture {
    /* Since element has only one space &nbsp; so image will
      look very small. Therefor add a height to element */
    height: 23rem;
    background-size: cover;
    /* Blend backgrounds, here image with gradient */
    background-blend-mode: screen;
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);

    &--1 {
      /* we can also use ../img/nat-5.jpg not ../../
      This is because entire scss will be complied to css in
      css folder style.css. So path can be relative to style.css */
      background-image: linear-gradient(to right bottom,
        $color-secondary-light,
        $color-secondary-dark
        ),
        url(../../img/nat-5.jpg);
    }

    &--2 {
      background-image: url(../../img/nat-5.jpg);
    }

    &--3 {
      background-image: url(../../img/nat-5.jpg);
    }
  }

  &__heading {
    font-size: 2.8rem;
    font-weight: 300;
    text-transform: uppercase;
    color: $color-white;
    position: absolute;
    top: 12rem;
    right: 3rem;
    text-align: right;
    width: 75%;
  }

  &__heading-span {
    padding: 1rem 1.5rem;
    /* With padding now text breaks into two lines, but
    padding is applied only in the staring of sentence and end of
    sentence. To apply it to the text start and end when text breaks
    to different lines, use property box-decoration-break: clone;
    clone means apply all styles to the new blocks created with break, in
    this case just the padding specified above */
    -webkit-box-decoration-break: clone;
    box-decoration-break: clone;
    &--1 {
      background-image: linear-gradient(to right bottom,
        rgba($color-secondary-light, .85),
        rgba($color-secondary-dark, .85)
     );
    }
  }

  &__details {
    padding: 3rem;
    ul {
      list-style: none;
      width: 80%;
      margin: 0 auto;
      li {
        text-align: center;
        font-size: 1.5rem;
        padding: 1rem;

        &:not(:last-child) {
          border-bottom: 0.1rem solid $color-grey-light-2;
        }
      }
    }
  }
}